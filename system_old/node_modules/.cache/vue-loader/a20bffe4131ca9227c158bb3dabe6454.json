{"remainingRequest":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user_1/root/system/src/components/ProjectExplore.vue?vue&type=style&index=0&id=3b259c9a&lang=scss&scoped=true&","dependencies":[{"path":"/home/user_1/root/system/src/components/ProjectExplore.vue","mtime":1612844515400},{"path":"/home/user_1/root/system/node_modules/css-loader/dist/cjs.js","mtime":1612517736416},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1612802232969},{"path":"/home/user_1/root/system/node_modules/postcss-loader/src/index.js","mtime":1612517736814},{"path":"/home/user_1/root/system/node_modules/sass-loader/dist/cjs.js","mtime":1612517748789},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js","mtime":1612802232969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5leHBsb3JlX2NvbXBvbmVudCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICBib3R0b206IDA7CiAgICBsZWZ0OiAwOwogICAgcmlnaHQ6IDA7CiAgICBwYWRkaW5nOiAxMHB4OwoKICAgIC5sZWZ0LCAucmlnaHQgewogICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIHdpZHRoOiA1MCU7CiAgICB9CgogICAgLmxlZnQgewogICAgICAgIC5zZWN0aW9uIHsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKCiAgICAgICAgICAgIGlucHV0IHsKICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRleHRhcmVhIHsKICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7CiAgICAgICAgICAgICAgICByZXNpemU6IG5vbmU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5idXR0b25fY21kX3dpbmRvdyB7CiAgICAgICAgICAgICAgICAmLmRlbGV0ZSB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDsKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwMDAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC5yaWdodCB7CiAgICAgICAgLnN1Yl9sZWZ0LCAuc3ViX3JpZ2h0IHsKICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgICAgICB3aWR0aDogNTAlOwogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgfQoKICAgICAgICAuc3ViX2xlZnQgewogICAgICAgICAgICAudGV4dCB7CiAgICAgICAgICAgICAgICBtYXJnaW46IDEzcHg7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC5zdWJfcmlnaHQgewogICAgICAgICAgICBpbnB1dCB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgICAgIG1hcmdpbjogMThweCBhdXRvOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC5ib3R0b20gewogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICBib3R0b206IDEwcHg7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7CgogICAgICAgIC5idXR0b25fY21kX3dpbmRvdyB7CiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyNXB4OwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["ProjectExplore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ProjectExplore.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"explore_component\">\r\n        <div class=\"left\">\r\n            <div class=\"section\">\r\n                <p>List:</p>\r\n                <select class=\"edit\" name=\"edit\">\r\n                    <option value=\"0\">Edit exist project</option>\r\n                </select>\r\n                <div class=\"button_cmd_window delete\">Delete selected</div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Name:</p>\r\n                <input type=\"text\" name=\"name\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Folder name:</p>\r\n                <input type=\"text\" name=\"folder_name\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Description:</p>\r\n                <textarea name=\"description\" rows=\"4\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div class=\"right\">\r\n            <div class=\"sub_left\">\r\n                <div class=\"text\">Git</div>\r\n                <div class=\"text\">Terser</div>\r\n                <div class=\"text\">Sass</div>\r\n            </div>\r\n            <div class=\"sub_right\">\r\n                <input type=\"checkbox\" name=\"git\" value=\"\"/>\r\n                <input type=\"checkbox\" name=\"terser\" value=\"\"/>\r\n                <input type=\"checkbox\" name=\"sass\" value=\"\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div class=\"button_cmd_window save\">Save</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Config from \"@/assets/js/Config.js\";\r\n    import Helper from \"@/assets/js/Helper.js\";\r\n    import Sio from \"@/assets/js/Sio.js\";\r\n\r\n    export default {\r\n        name: \"ProjectExploreComponent\",\r\n        //components: {},\r\n        computed: {},\r\n        methods: {\r\n            _setting: Config.setting,\r\n            _findParent: Helper.findParent,\r\n            _currentWindowElement: Helper.currentWindowElement,\r\n            _replaceName: Helper.replaceName,\r\n            _deleteFileSetting(extension) {\r\n                Sio.sendMessage(\"t_exec_i\", {\r\n                    closeEnabled: false,\r\n                    tag: \"exploreDeleteToolFileSetting\",\r\n                    cmd: `rm \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${extension}\"`\r\n                });\r\n            },\r\n            init(windowComponent) {\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    this.selectEdit = windowComponent.querySelector(\"select[name='edit']\");\r\n                    this.inputName = windowComponent.querySelector(\"input[name='name']\");\r\n                    this.inputFolderName = windowComponent.querySelector(\"input[name='folder_name']\");\r\n                    this.textareaDescription = windowComponent.querySelector(\"textarea[name='description']\");\r\n                    this.checkboxGit = windowComponent.querySelector(\"input[name='git']\");\r\n                    this.checkboxTerser = windowComponent.querySelector(\"input[name='terser']\");\r\n                    this.checkboxSass = windowComponent.querySelector(\"input[name='sass']\");\r\n                    this.buttonDelete = windowComponent.querySelector(\".button_cmd_window.delete\");\r\n                    this.buttonSave = windowComponent.querySelector(\".button_cmd_window.save\");\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"exploreInit\",\r\n                            cmd: `ls \"${this._setting().systemData.pathSetting}\"/*${this._setting().systemData.extensionProject} | sed 's#.*/##'`\r\n                        });\r\n\r\n                        Sio.readMessage(\"t_exec_o_exploreInit\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined) {\r\n                                const outSplit = result.split(\"\\n\");\r\n\r\n                                for (const value of outSplit) {\r\n                                    if (value !== \"\" && value.indexOf(\"ls: \") === -1) {\r\n                                        const option = document.createElement(\"option\");\r\n                                        option.value = value;\r\n                                        option.text = value.replace(this._setting().systemData.extensionProject, \"\");\r\n                                        this.selectEdit.appendChild(option);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (data.close !== undefined)\r\n                                Sio.stopRead(\"t_exec_o_exploreInit\");\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            clickLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"explore_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    this.selectEdit.style.borderColor = \"transparent\";\r\n                    this.inputName.style.borderColor = \"transparent\";\r\n                    this.inputFolderName.style.borderColor = \"transparent\";\r\n\r\n                    if (event.target.classList.contains(\"save\") === true) {\r\n                        const inputNameCheck = /^[A-Za-z0-9-_ ]+$/.test(this.inputName.value);\r\n                        const folderNameCheck = /^[A-Za-z0-9-_]+$/.test(this.inputFolderName.value);\r\n\r\n                        if (inputNameCheck === true && folderNameCheck === true && this.inputName.value !== \"\" && this.inputFolderName.value !== \"\") {\r\n                            this.inputNameReplace = this._replaceName(this.inputName.value, /\\s/g, true);\r\n\r\n                            const content = {\r\n                                name: this.inputName.value,\r\n                                folderName: this.inputFolderName.value,\r\n                                description: this.textareaDescription.value,\r\n                                git: this.checkboxGit.checked === true ? true : false,\r\n                                terser: this.checkboxTerser.checked === true ? true : false,\r\n                                sass: this.checkboxSass.checked === true ? true : false\r\n                            };\r\n\r\n                            // Create setting file\r\n                            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                tag: \"exploreClickLogicSave\",\r\n                                cmd: \"write\",\r\n                                path: `\"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionProject}\"`,\r\n                                content: JSON.stringify(content)\r\n                            });\r\n\r\n                            Sio.readMessage(\"t_exec_stream_o_exploreClickLogicSave\", (data) => {\r\n                                if (data.chunk === \"end\") {\r\n                                    Sio.stopRead(\"t_exec_stream_o_exploreClickLogicSave\");\r\n\r\n                                    const optionValue = `${this.inputNameReplace}${this._setting().systemData.extensionProject}`;\r\n\r\n                                    if (this.selectEdit.querySelector(`option[value='${optionValue}'`) === null) {\r\n                                        const option = document.createElement(\"option\");\r\n                                        option.value = optionValue;\r\n                                        option.text = this.inputNameReplace;\r\n                                        this.selectEdit.appendChild(option);\r\n\r\n                                        this.selectEdit.querySelector(`option[value='${optionValue}'`).selected = true;\r\n\r\n                                        this.buttonDelete.style.display = \"inline-block\";\r\n                                    }\r\n\r\n                                    // Create folder root\r\n                                    Sio.sendMessage(\"t_exec_i\", {\r\n                                        tag: \"exploreClickLogicFolder\",\r\n                                        cmd: `mkdir -p \"${this._setting().systemData.pathProject}/${this.inputFolderName.value}/root\"`\r\n                                    });\r\n\r\n                                    // Create git setting file\r\n                                    if (this.checkboxGit.checked === true) {\r\n                                        Sio.sendMessage(\"t_exec_i\", {\r\n                                            tag: \"exploreGitClickLogicSetting\",\r\n                                            cmd: `test -f \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionGit}\"`\r\n                                        });\r\n\r\n                                        Sio.readMessage(\"t_exec_o_exploreGitClickLogicSetting\", (data) => {\r\n                                            if (data.close === 1)\r\n                                                this.$root.$refs.toolGitComponent.createFile(this.inputNameReplace, `${this._setting().systemData.pathProject}/${this.inputFolderName.value}/root`);\r\n                                            else\r\n                                                Sio.stopRead(\"t_exec_o_exploreGitClickLogicSetting\");\r\n                                        });\r\n                                    } else {\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionGit);\r\n\r\n                                        this.$root.$refs.toolGitComponent.deleteOption();\r\n                                    }\r\n\r\n                                    // Create terser setting file\r\n                                    if (this.checkboxTerser.checked === true) {\r\n                                        Sio.sendMessage(\"t_exec_i\", {\r\n                                            tag: \"exploreTerserClickLogicSetting\",\r\n                                            cmd: `test -f \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionTerser}\"`\r\n                                        });\r\n\r\n                                        Sio.readMessage(\"t_exec_o_exploreTerserClickLogicSetting\", (data) => {\r\n                                            if (data.close === 1)\r\n                                                this.$root.$refs.toolTerserComponent.createFile(this.inputNameReplace, `${this._setting().systemData.pathProject}/${this.inputFolderName.value}/root`);\r\n                                            else\r\n                                                Sio.stopRead(\"t_exec_o_exploreTerserClickLogicSetting\");\r\n                                        });\r\n                                    } else {\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionTerser);\r\n\r\n                                        this.$root.$refs.toolTerserComponent.deleteOption();\r\n                                    }\r\n\r\n                                    // Create sass setting file\r\n                                    if (this.checkboxSass.checked === true) {\r\n                                        Sio.sendMessage(\"t_exec_i\", {\r\n                                            tag: \"exploreSassClickLogicSetting\",\r\n                                            cmd: `test -f \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionSass}\"`\r\n                                        });\r\n\r\n                                        Sio.readMessage(\"t_exec_o_exploreSassClickLogicSetting\", (data) => {\r\n                                            if (data.close === 1)\r\n                                                this.$root.$refs.toolSassComponent.createFile(this.inputNameReplace, `${this._setting().systemData.pathProject}/${this.inputFolderName.value}/root`);\r\n                                            else\r\n                                                Sio.stopRead(\"t_exec_o_exploreSassClickLogicSetting\");\r\n                                        });\r\n                                    } else {\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionSass);\r\n\r\n                                        this.$root.$refs.toolSassComponent.deleteOption();\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (this.inputName.value === \"\" || inputNameCheck === false)\r\n                                this.inputName.style.borderColor = \"#ff0000\";\r\n                            if (this.inputFolderName.value === \"\" || folderNameCheck === false)\r\n                                this.inputFolderName.style.borderColor = \"#ff0000\";\r\n                        }\r\n                    } else if (event.target.classList.contains(\"delete\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            this.$root.$refs.promptComponent.show(windowComponent, \"You really want to delete this project?<br>(The root folder will be preserved).\", () => {\r\n                                Sio.sendMessage(\"t_exec_i\", {\r\n                                    tag: \"exploreClickLogicDelete\",\r\n                                    cmd: `rm \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionProject}\"`\r\n                                });\r\n\r\n                                Sio.readMessage(\"t_exec_o_exploreClickLogicDelete\", (data) => {\r\n                                    if (data.close !== undefined && this.selectEdit.selectedIndex > 0 && this.selectEdit.options[this.selectEdit.selectedIndex].value !== null) {\r\n                                        Sio.stopRead(\"t_exec_o_exploreClickLogicDelete\");\r\n\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionGit);\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionTerser);\r\n                                        this._deleteFileSetting(this._setting().systemData.extensionSass);\r\n\r\n                                        this.$root.$refs.toolGitComponent.deleteOption();\r\n                                        this.$root.$refs.toolTerserComponent.deleteOption();\r\n                                        this.$root.$refs.toolSassComponent.deleteOption();\r\n\r\n                                        this.selectEdit.options[this.selectEdit.selectedIndex].remove();\r\n                                        this.selectEdit.selectedIndex = 0;\r\n\r\n                                        this.inputName.value = \"\";\r\n                                        this.inputNameReplace = \"\";\r\n                                        this.inputFolderName.value = \"\";\r\n                                        this.textareaDescription.value = \"\";\r\n                                        this.checkboxGit.checked = false;\r\n                                        this.checkboxTerser.checked = false;\r\n                                        this.checkboxSass.checked = false;\r\n\r\n                                        this.buttonDelete.style.display = \"none\";\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            changeLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"explore_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    if (event.target.classList.contains(\"edit\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            const optionValue = this.selectEdit.options[this.selectEdit.selectedIndex].value;\r\n\r\n                            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                tag: \"exploreChangeLogicEdit\",\r\n                                cmd: \"read\",\r\n                                path: `\"${this._setting().systemData.pathSetting}/${optionValue}\"`\r\n                            });\r\n\r\n                            let buffer = \"\";\r\n\r\n                            Sio.readMessage(\"t_exec_stream_o_exploreChangeLogicEdit\", (data) => {\r\n                                if (data.chunk !== \"end\")\r\n                                    buffer += data.chunk;\r\n                                else {\r\n                                    Sio.stopRead(\"t_exec_stream_o_exploreChangeLogicEdit\");\r\n\r\n                                    const result = JSON.parse(buffer);\r\n\r\n                                    this.inputName.value = result.name;\r\n                                    this.inputNameReplace = this._replaceName(result.name, /\\s/g, true);\r\n                                    this.inputFolderName.value = result.folderName;\r\n                                    this.textareaDescription.value = result.description;\r\n                                    this.checkboxGit.checked = result.git;\r\n                                    this.checkboxTerser.checked = result.terser;\r\n                                    this.checkboxSass.checked = result.sass;\r\n\r\n                                    this.buttonDelete.style.display = \"inline-block\";\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.inputName.value = \"\";\r\n                            this.inputNameReplace = \"\";\r\n                            this.inputFolderName.value = \"\";\r\n                            this.textareaDescription.value = \"\";\r\n                            this.checkboxGit.checked = false;\r\n                            this.checkboxTerser.checked = false;\r\n                            this.checkboxSass.checked = false;\r\n\r\n                            this.buttonDelete.style.display = \"none\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                inputName: null,\r\n                inputNameReplace: \"\",\r\n                inputFolderName: null,\r\n                textareaDescription: null,\r\n                checkboxGit: null,\r\n                checkboxTerser: null,\r\n                checkboxSass: null,\r\n                selectEdit: null,\r\n                buttonSave: null,\r\n                buttonDelete: null\r\n            };\r\n        },\r\n        created() {\r\n            this.$root.$refs.projectExploreComponent = this;\r\n        },\r\n        beforeDestroy() {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .explore_component {\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        padding: 10px;\r\n\r\n        .left, .right {\r\n            vertical-align: top;\r\n            display: inline-block;\r\n            width: 50%;\r\n        }\r\n\r\n        .left {\r\n            .section {\r\n                margin-bottom: 20px;\r\n\r\n                input {\r\n                    width: 90%;\r\n                }\r\n\r\n                textarea {\r\n                    width: 90%;\r\n                    resize: none;\r\n                }\r\n\r\n                .button_cmd_window {\r\n                    &.delete {\r\n                        display: none;\r\n                        margin-left: 10px;\r\n                        background-color: #ff0000;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .right {\r\n            .sub_left, .sub_right {\r\n                vertical-align: top;\r\n                display: inline-block;\r\n                width: 50%;\r\n                text-align: center;\r\n            }\r\n\r\n            .sub_left {\r\n                .text {\r\n                    margin: 13px;\r\n                }\r\n            }\r\n\r\n            .sub_right {\r\n                input {\r\n                    display: block;\r\n                    margin: 18px auto;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bottom {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            width: 100%;\r\n            text-align: right;\r\n\r\n            .button_cmd_window {\r\n                display: inline-block;\r\n                margin-right: 25px;\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}