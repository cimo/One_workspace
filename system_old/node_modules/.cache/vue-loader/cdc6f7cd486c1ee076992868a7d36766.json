{"remainingRequest":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user_1/root/system/src/components/ToolGit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user_1/root/system/src/components/ToolGit.vue","mtime":1612844515616},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/babel-loader/lib/index.js","mtime":1612517717486},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js","mtime":1612802232969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ToolGit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToolGit.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"git_component\">\r\n        <div class=\"menu_git\">\r\n            <p class=\"button focused\">Receive</p>\r\n            <p class=\"button\">Send</p>\r\n        </div>\r\n        <div class=\"part_1_container\">\r\n            <div class=\"left\">\r\n                <div class=\"section\">\r\n                    <p>List:</p>\r\n                    <select class=\"edit\" name=\"edit\">\r\n                        <option value=\"0\">Edit git data</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Url:</p>\r\n                    <input type=\"text\" name=\"url\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Username:</p>\r\n                    <input type=\"text\" name=\"username\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Password:</p>\r\n                    <input type=\"password\" name=\"password\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Branch name:</p>\r\n                    <input type=\"text\" name=\"branchName\" value=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <div class=\"section\">\r\n                    <div class=\"button_cmd_window git_command clone\">Clone</div>\r\n                    <div class=\"button_cmd_window git_command pull\">Pull</div>\r\n                    <div class=\"button_cmd_window git_command fetch\">Fetch</div>\r\n                    <div class=\"button_cmd_window git_command reset\">Reset</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Output:</p>\r\n                <pre class=\"output\"></pre>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <div class=\"button_cmd_window save\">Save</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"part_2_container\">\r\n            <div class=\"left\">\r\n                <div class=\"section\">\r\n                    <p>Project: <span class=\"project_label\"></span></p>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Branch name:</p>\r\n                    <input type=\"text\" name=\"branchName\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Commit description:</p>\r\n                    <input type=\"text\" name=\"commitDescription\" value=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <div class=\"section\">\r\n                    <div class=\"button_cmd_window git_command status\">Status</div>\r\n                    <div class=\"button_cmd_window git_command commit\">Commit</div>\r\n                    <div class=\"button_cmd_window git_command push\">Push</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Output:</p>\r\n                <pre class=\"output\"></pre>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Config from \"@/assets/js/Config.js\";\r\n    import Helper from \"@/assets/js/Helper\";\r\n    import Sio from \"@/assets/js/Sio\";\r\n\r\n    export default {\r\n        name: \"ToolGitComponent\",\r\n        //components: {},\r\n        computed: {},\r\n        methods: {\r\n            _setting: Config.setting,\r\n            _findParent: Helper.findParent,\r\n            _capitalizeFirstLetter: Helper.capitalizeFirstLetter,\r\n            _currentWindowElement: Helper.currentWindowElement,\r\n            init(windowComponent) {\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    this.elementPart1Container = windowComponent.querySelector(\".part_1_container\");\r\n                    this.elementPart2Container = windowComponent.querySelector(\".part_2_container\");\r\n                    this.selectEdit = windowComponent.querySelector(\".part_1_container select[name='edit']\");\r\n                    this.elementProjectLabel = windowComponent.querySelector(\".part_2_container .project_label\");\r\n                    this.inputUrl = windowComponent.querySelector(\".part_1_container input[name='url']\");\r\n                    this.inputUsername = windowComponent.querySelector(\".part_1_container input[name='username']\");\r\n                    this.inputPassword = windowComponent.querySelector(\".part_1_container input[name='password']\");\r\n                    this.inputBranchName1 = windowComponent.querySelector(\".part_1_container input[name='branchName']\");\r\n                    this.inputBranchName2 = windowComponent.querySelector(\".part_2_container input[name='branchName']\");\r\n                    this.inputCommitDescription = windowComponent.querySelector(\".part_2_container input[name='commitDescription']\");\r\n                    this.elementOutput1 = windowComponent.querySelector(\".part_1_container .output\");\r\n                    this.elementOutput2 = windowComponent.querySelector(\".part_2_container .output\");\r\n                    this.buttonSave = windowComponent.querySelector(\".button_cmd_window.save\");\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"gitInit\",\r\n                            cmd: `ls \"${this._setting().systemData.pathSetting}\"/*${this._setting().systemData.extensionGit} | sed 's#.*/##'`\r\n                        });\r\n\r\n                        Sio.readMessage(\"t_exec_o_gitInit\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined) {\r\n                                const outSplit = result.split(\"\\n\");\r\n\r\n                                for (const value of outSplit) {\r\n                                    if (value !== \"\" && value.indexOf(\"ls: \") === -1) {\r\n                                        const option = document.createElement(\"option\");\r\n                                        option.value = value;\r\n                                        option.text = value.replace(this._setting().systemData.extensionGit, \"\");\r\n                                        this.selectEdit.appendChild(option);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (data.close !== undefined)\r\n                                Sio.stopRead(\"t_exec_o_gitInit\");\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            clickLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"git_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    const menuElement = this._findParent(event.target, [\"menu_git\"]);\r\n\r\n                    if (menuElement !== null) {\r\n                        const buttonList = menuElement.querySelectorAll(\".button\");\r\n\r\n                        const index = Array.from(buttonList).indexOf(event.target);\r\n\r\n                        if (index >= 0) {\r\n                            for (const value of buttonList) {\r\n                                value.classList.remove(\"focused\");\r\n                            }\r\n\r\n                            buttonList[index].classList.add(\"focused\");\r\n\r\n                            if (index === 0) {\r\n                                this.elementPart1Container.style.display = \"block\";\r\n                                this.elementPart2Container.style.display = \"none\";\r\n                            }\r\n                            else if (index === 1) {\r\n                                this.elementPart1Container.style.display = \"none\";\r\n                                this.elementPart2Container.style.display = \"block\";\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.selectEdit.style.borderColor = \"transparent\";\r\n                    this.inputUrl.style.borderColor = \"transparent\";\r\n                    this.inputUsername.style.borderColor = \"transparent\";\r\n                    this.inputPassword.style.borderColor = \"transparent\";\r\n                    this.inputBranchName1.style.borderColor = \"transparent\";\r\n                    this.inputBranchName2.style.borderColor = \"transparent\";\r\n                    this.inputCommitDescription.style.borderColor = \"transparent\";\r\n\r\n                    if (event.target.classList.contains(\"save\") === true) {\r\n                        if (this.projectName !== \"\" && this.inputUrl.value !== \"\" && this.inputUsername !== \"\" && this.inputPassword.value !== \"\")\r\n                            this.createFile();\r\n                        else {\r\n                            if (this.inputUrl.value === \"\")\r\n                                this.inputUrl.style.borderColor = \"#ff0000\";\r\n                            if (this.inputUsername.value === \"\")\r\n                                this.inputUsername.style.borderColor = \"#ff0000\";\r\n                            if (this.inputPassword.value === \"\")\r\n                                this.inputPassword.style.borderColor = \"#ff0000\";\r\n                        }\r\n                    }\r\n\r\n                    if (event.target.classList.contains(\"button_cmd_window\") === true) {\r\n                        if (this.projectName === \"\") {\r\n                            this.selectEdit.style.borderColor = \"#ff0000\";\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        this.elementOutput1.innerHTML = \"\";\r\n                        this.elementOutput2.innerHTML = \"\";\r\n\r\n                        let url = \"\";\r\n                        let command = \"\";\r\n\r\n                        if (this.inputUrl.value.indexOf(\"https://\") !== -1) {\r\n                            const inputUrlValue = this.inputUrl.value.replace(\"https://\", \"\");\r\n\r\n                            url = `https://${this.inputUsername.value}:${this.inputPassword.value}@${inputUrlValue}`;\r\n                        }\r\n                        else\r\n                            url = this.inputUrl.value;\r\n\r\n                        const branchNameMatch1 = /^[A-Za-z0-9-_/ ]+$/.test(this.inputBranchName1.value);\r\n                        const branchNameMatch2 = /^[A-Za-z0-9-_/ ]+$/.test(this.inputBranchName2.value);\r\n\r\n                        if (event.target.classList.contains(\"clone\") === true)\r\n                            command = `mkdir -p \"${this.projectPath}\" && cd \"${this.projectPath}\" && git clone ${url} .`;\r\n                        else if (event.target.classList.contains(\"pull\") === true) {\r\n                            if (branchNameMatch1 === true)\r\n                                command = `cd \"${this.projectPath}\" && git pull ${url} ${this.inputBranchName1.value}`;\r\n                            else\r\n                                this.inputBranchName1.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"fetch\") === true)\r\n                            command = `cd \"${this.projectPath}\" && git fetch --all`;\r\n                        else if (event.target.classList.contains(\"reset\") === true) {\r\n                            if (branchNameMatch1 === true)\r\n                                command = `cd \"${this.projectPath}\" && git reset --hard ${this.inputBranchName1.value}`;\r\n                            else\r\n                                this.inputBranchName1.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"status\") === true) {\r\n                            command = `cd \"${this.projectPath}\" && git status`;\r\n                        }\r\n                        else if (event.target.classList.contains(\"commit\") === true) {\r\n                            if (this.inputCommitDescription.value !== \"\") {\r\n                                this.inputBranchName2.value = \"\";\r\n\r\n                                command = `cd \"${this.projectPath}\" && git commit -m \"${this.inputCommitDescription.value}\"`;\r\n                            }\r\n                            else\r\n                                this.inputCommitDescription.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"push\") === true) {\r\n                            if (branchNameMatch2 === true) {\r\n                                this.inputCommitDescription.value = \"\";\r\n\r\n                                command = `cd \"${this.projectPath}\" && git remote set-url origin ${url} && git push ${this.inputBranchName2.value}`;\r\n                            }\r\n                            else\r\n                                this.inputBranchName2.style.borderColor = \"#ff0000\";\r\n                        }\r\n\r\n                        if (command === \"\")\r\n                            return false;\r\n\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"gitCommand\",\r\n                            cmd: command\r\n                        });\r\n\r\n                        let buffer = \"\";\r\n\r\n                        Sio.readMessage(\"t_exec_o_gitCommand\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined && event.target.classList.contains(\"clone\") === true) {\r\n                                buffer = result;\r\n                                this.elementOutput1.innerHTML = buffer;\r\n                            }\r\n                            else if (result !== undefined && event.target.classList.contains(\"fetch\") === true) {\r\n                                buffer = result;\r\n                                this.elementOutput1.innerHTML = buffer;\r\n                            }\r\n                            else if (result !== undefined && event.target.classList.contains(\"clone\") === false)\r\n                                buffer += result;\r\n\r\n                            if (data.close !== undefined) {\r\n                                Sio.stopRead(\"t_exec_o_gitCommand\");\r\n\r\n                                if (getComputedStyle(this.elementPart1Container, null).display === \"block\")\r\n                                    this.elementOutput1.innerHTML = buffer;\r\n                                else\r\n                                    this.elementOutput2.innerHTML = buffer;\r\n\r\n                                if (event.target.classList.contains(\"clone\") === true && data.close !== 128)\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                                else if (event.target.classList.contains(\"fetch\") === true && data.close === 0)\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            changeLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"git_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    if (event.target.classList.contains(\"edit\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            const optionValue = this.selectEdit.options[this.selectEdit.selectedIndex].value;\r\n\r\n                            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                tag: \"gitChangeLogicEdit\",\r\n                                cmd: \"read\",\r\n                                path: `\"${this._setting().systemData.pathSetting}/${optionValue}\"`\r\n                            });\r\n\r\n                            let buffer = \"\";\r\n\r\n                            Sio.readMessage(\"t_exec_stream_o_gitChangeLogicEdit\", (data) => {\r\n                                if (data.chunk !== \"end\")\r\n                                    buffer += data.chunk;\r\n                                else {\r\n                                    Sio.stopRead(\"t_exec_stream_o_gitChangeLogicEdit\");\r\n\r\n                                    const result = JSON.parse(buffer);\r\n\r\n                                    this.projectName = result.name;\r\n                                    this.projectPath = result.path;\r\n                                    this.elementProjectLabel.innerHTML = result.name;\r\n                                    this.inputUrl.value = result.url;\r\n                                    this.inputUsername.value = result.username;\r\n                                    this.inputBranchName1.value = \"\";\r\n                                    this.inputBranchName2.value = \"\";\r\n                                    this.inputCommitDescription.value = \"\";\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                                    this.elementOutput2.innerHTML = \"\";\r\n\r\n                                    Sio.sendMessage(\"t_crypt_decrypt_i\", {\r\n                                        tag: \"gitSetting\",\r\n                                        hex: result.password\r\n                                    });\r\n\r\n                                    Sio.readMessage(\"t_crypt_decrypt_o_gitSetting\", (data) => {\r\n                                        Sio.stopRead(\"t_crypt_decrypt_o_gitSetting\");\r\n\r\n                                        this.inputPassword.value = data.out;\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.projectName = \"\";\r\n                            this.projectPath = \"\";\r\n                            this.elementProjectLabel.innerHTML = \"\";\r\n                            this.inputUrl.value = \"\";\r\n                            this.inputUsername.value = \"\";\r\n                            this.inputPassword.value = \"\";\r\n                            this.inputBranchName1.value = \"\";\r\n                            this.inputBranchName2.value = \"\";\r\n                            this.inputCommitDescription.value = \"\";\r\n                            this.elementOutput1.innerHTML = \"\";\r\n                            this.elementOutput2.innerHTML = \"\";\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            createFile(name, path) {\r\n                if (name !== undefined)\r\n                    this.projectName = name;\r\n\r\n                if (path !== undefined)\r\n                    this.projectPath = path;\r\n\r\n                Sio.sendMessage(\"t_crypt_encrypt_i\", {\r\n                    tag: \"gitSetting\",\r\n                    text: this.inputPassword !== null ? this.inputPassword.value : \"\"\r\n                });\r\n\r\n                Sio.readMessage(\"t_crypt_encrypt_o_gitSetting\", (data) => {\r\n                    Sio.stopRead(\"t_crypt_encrypt_o_gitSetting\");\r\n\r\n                    const content = {\r\n                        url: this.inputUrl !== null ? this.inputUrl.value : \"\",\r\n                        username: this.inputUsername !== null ? this.inputUsername.value : \"\",\r\n                        password: data.out,\r\n                        name: this.projectName,\r\n                        path: this.projectPath\r\n                    };\r\n\r\n                    Sio.sendMessage(\"t_exec_stream_i\", {\r\n                        tag: \"gitClickLogicSave\",\r\n                        cmd: \"write\",\r\n                        path: `\"${this._setting().systemData.pathSetting}/${this.projectName}${this._setting().systemData.extensionGit}\"`,\r\n                        content: JSON.stringify(content)\r\n                    });\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.readMessage(\"t_exec_stream_o_gitClickLogicSave\", (data) => {\r\n                            if (data.chunk === \"end\") {\r\n                                Sio.stopRead(\"t_exec_stream_o_gitClickLogicSave\");\r\n\r\n                                const optionValue = `${this.projectName}${this._setting().systemData.extensionGit}`;\r\n\r\n                                if (this.selectEdit.querySelector(`option[value='${optionValue}'`) === null) {\r\n                                    const option = document.createElement(\"option\");\r\n                                    option.value = optionValue;\r\n                                    option.text = this.projectName;\r\n                                    this.selectEdit.appendChild(option);\r\n\r\n                                    this.selectEdit.querySelector(`option[value='${optionValue}'`).selected = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            deleteOption() {\r\n                if (this.selectEdit !== null) {\r\n                    for (const option of this.selectEdit.options) {\r\n                        if (option.value === `${this.projectName}${this._setting().systemData.extensionGit}`) {\r\n                            option.remove();\r\n                            this.selectEdit.selectedIndex = 0;\r\n\r\n                            this.projectName = \"\";\r\n                            this.projectPath = \"\";\r\n                            this.elementProjectLabel.innerHTML = \"\";\r\n                            this.inputUrl.value = \"\";\r\n                            this.inputUsername.value = \"\";\r\n                            this.inputPassword.value = \"\";\r\n                            this.inputBranchName1.value = \"\";\r\n                            this.inputBranchName2.value = \"\";\r\n                            this.inputCommitDescription.value = \"\";\r\n                            this.elementOutput1.innerHTML = \"\";\r\n                            this.elementOutput2.innerHTML = \"\";\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                projectName: \"\",\r\n                projectPath: \"\",\r\n                elementPart1Container: null,\r\n                elementPart2Container: null,\r\n                selectEdit: null,\r\n                elementProjectLabel: null,\r\n                inputUrl: null,\r\n                inputUsername: null,\r\n                inputPassword: null,\r\n                inputBranchName1: null,\r\n                inputBranchName2: null,\r\n                inputCommitDescription: null,\r\n                elementOutput1: null,\r\n                elementOutput2: null,\r\n                buttonSave: null\r\n            };\r\n        },\r\n        created() {\r\n            this.$root.$refs.toolGitComponent = this;\r\n        },\r\n        beforeDestroy() {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .git_component {\r\n        .menu_git {\r\n            height: 28px;\r\n            background-color: #2b2b2b;\r\n            border-bottom: 1px solid #a0a0a0;\r\n            cursor: pointer;\r\n\r\n            .button {\r\n                display: inline-block;\r\n                padding: 7px 8px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .focused {\r\n                background-color: #0060ad;\r\n            }\r\n\r\n            p {\r\n                &:hover {\r\n                    background-color: #808080;\r\n                }\r\n            }\r\n        }\r\n\r\n        .part_1_container, .part_2_container {\r\n            position: absolute;\r\n            top: 28px;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            padding: 10px;\r\n        }\r\n\r\n        .part_1_container {\r\n            display: block;\r\n\r\n            .section {\r\n                .output {\r\n                    height: 100px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .part_2_container {\r\n            display: none;\r\n\r\n            .section {\r\n                .output {\r\n                    height: 280px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .left, .right {\r\n            vertical-align: top;\r\n            display: inline-block;\r\n            width: 50%;\r\n        }\r\n\r\n        .left {\r\n            .section {\r\n                margin-bottom: 20px;\r\n\r\n                input {\r\n                    width: 90%;\r\n                }\r\n\r\n                input[name='branchName'] {\r\n                    width: 40%;\r\n                }\r\n            }\r\n        }\r\n\r\n        .right {\r\n            .section {\r\n                text-align: center;\r\n\r\n                .button_cmd_window {\r\n                    &.git_command {\r\n                        display: inline-block;\r\n                        margin: 5px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .section {\r\n            .output {\r\n                overflow-y: auto;\r\n            }\r\n        }\r\n\r\n        .bottom {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            width: 100%;\r\n            text-align: right;\r\n\r\n            .button_cmd_window {\r\n                display: inline-block;\r\n                margin-right: 25px;\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}