{"remainingRequest":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user_1/root/system/src/components/ProjectSsh.vue?vue&type=style&index=0&id=ea074efa&lang=scss&scoped=true&","dependencies":[{"path":"/home/user_1/root/system/src/components/ProjectSsh.vue","mtime":1612800273199},{"path":"/home/user_1/root/system/node_modules/css-loader/dist/cjs.js","mtime":1612517736416},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1612802232969},{"path":"/home/user_1/root/system/node_modules/postcss-loader/src/index.js","mtime":1612517736814},{"path":"/home/user_1/root/system/node_modules/sass-loader/dist/cjs.js","mtime":1612517748789},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js","mtime":1612802232969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zc2hfY29tcG9uZW50IHsKICAgIC5tZW51X3NzaCB7CiAgICAgICAgaGVpZ2h0OiAyOHB4OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyYjJiMmI7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNhMGEwYTA7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwoKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgICAgICBwYWRkaW5nOiA3cHggOHB4OwogICAgICAgICAgICBmb250LXNpemU6IDEycHg7CiAgICAgICAgfQoKICAgICAgICAuZm9jdXNlZCB7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDYwYWQ7CiAgICAgICAgfQoKICAgICAgICBwIHsKICAgICAgICAgICAgJjpob3ZlciB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODA4MDgwOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC5wYXJ0XzFfY29udGFpbmVyIHsKICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgdG9wOiAyOHB4OwogICAgICAgIGJvdHRvbTogMDsKICAgICAgICBsZWZ0OiAwOwogICAgICAgIHJpZ2h0OiAwOwogICAgICAgIHBhZGRpbmc6IDEwcHg7CiAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICB9CgogICAgLnBhcnRfMl9jb250YWluZXIgewogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICB0b3A6IDI5cHg7CiAgICAgICAgYm90dG9tOiAwOwogICAgICAgIGxlZnQ6IDA7CiAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgZGlzcGxheTogbm9uZTsKCiAgICAgICAgLnRlcm1pbmFsX3Byb2plY3RfY29tcG9uZW50IHsKICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICB0b3A6IDA7CiAgICAgICAgICAgIGJvdHRvbTogMDsKICAgICAgICAgICAgbGVmdDogMDsKICAgICAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgfQogICAgfQoKICAgIC5zZWN0aW9uIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwoKICAgICAgICBpbnB1dCB7CiAgICAgICAgICAgIHdpZHRoOiA0MCU7CiAgICAgICAgfQoKICAgICAgICB0ZXh0YXJlYSB7CiAgICAgICAgICAgIHdpZHRoOiA0MCU7CiAgICAgICAgICAgIHJlc2l6ZTogbm9uZTsKICAgICAgICB9CgogICAgICAgIC5idXR0b25fY21kX3dpbmRvdyB7CiAgICAgICAgICAgICYuZGVsZXRlIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjAwMDA7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLmJvdHRvbSB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIGJvdHRvbTogMTBweDsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKCiAgICAgICAgLmJ1dHRvbl9jbWRfd2luZG93IHsKICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["ProjectSsh.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAscA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ProjectSsh.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"ssh_component\">\r\n        <div class=\"menu_ssh\">\r\n            <p class=\"button focused\">Data</p>\r\n            <p class=\"button\">Console</p>\r\n        </div>\r\n        <div class=\"part_1_container\">\r\n            <div class=\"section\">\r\n                <p>List:</p>\r\n                <select class=\"edit\" name=\"edit\">\r\n                    <option value=\"0\">Edit exist ssh</option>\r\n                </select>\r\n                <div class=\"button_cmd_window delete\">Delete selected</div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Name:</p>\r\n                <input type=\"text\" name=\"name\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Server:</p>\r\n                <input type=\"text\" name=\"server\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Username:</p>\r\n                <input type=\"text\" name=\"username\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Password:</p>\r\n                <input type=\"password\" name=\"password\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Key public:</p>\r\n                <input type=\"text\" name=\"key_public\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Description:</p>\r\n                <textarea name=\"description\" rows=\"4\"></textarea>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <div class=\"button_cmd_window save\">Save</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"part_2_container\">\r\n            <div class=\"terminal_project_component\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Config from \"@/assets/js/Config.js\";\r\n    import Helper from \"@/assets/js/Helper.js\";\r\n    import Sio from \"@/assets/js/Sio.js\";\r\n\r\n    import {Terminal} from \"xterm\";\r\n    import {FitAddon} from \"xterm-addon-fit\";\r\n    import \"xterm/css/xterm.css\";\r\n\r\n    export default {\r\n        name: \"ProjectSshComponent\",\r\n        //components: {},\r\n        computed: {\r\n\r\n        },\r\n        methods: {\r\n            _setting: Config.setting,\r\n            _findParent: Helper.findParent,\r\n            _currentWindowElement: Helper.currentWindowElement,\r\n            _replaceName: Helper.replaceName,\r\n            _createXterm(windowComponent) {\r\n                const terminalComponent = windowComponent.querySelector(\".terminal_project_component\");\r\n\r\n                this.xterm = new Terminal({\r\n                    cursorBlink: true\r\n                });\r\n                this.fitAddon = new FitAddon();\r\n                this.xterm.loadAddon(this.fitAddon);\r\n                this.xterm.open(terminalComponent);\r\n                this.xterm.focus();\r\n\r\n                const clientRect = terminalComponent.getBoundingClientRect();\r\n                const terminal = terminalComponent.querySelector(\".terminal.xterm\");\r\n\r\n                terminal.style.height = `${clientRect.height}px`;\r\n\r\n                this.fitAddon.fit();\r\n\r\n                const size = this.fitAddon.proposeDimensions();\r\n\r\n                Sio.sendMessage(\"t_pty_start\", {\r\n                    tag: \"ssh\",\r\n                    size: [size.cols, size.rows]\r\n                });\r\n\r\n                const pathKey = `${this._setting().systemData.pathKey}/${this.inputKeyPublic.value}`;\r\n\r\n                let command = \"\";\r\n\r\n                if (this.inputPassword.value !== \"\") {\r\n                    command = `sshpass -p \"${this.inputPassword.value}\" ssh ${this.inputUsername.value}@${this.inputServer.value}`;\r\n                }\r\n                else if (this.inputKeyPublic.value !== \"\") {\r\n                    command = `chmod 400 ${pathKey} && ssh -i ${pathKey} ${this.inputUsername.value}@${this.inputServer.value}`;\r\n                }\r\n\r\n                if (command === \"\")\r\n                    return false;\r\n\r\n                Sio.sendMessage(\"t_pty_i\", {\r\n                    tag: \"ssh\",\r\n                    cmd: `history -c && history -w && clear && ${command}\\r`\r\n                });\r\n\r\n                this.xterm.onData((data) => {\r\n                    Sio.sendMessage(\"t_pty_i\", {\r\n                        tag: \"ssh\",\r\n                        cmd: data\r\n                    });\r\n                });\r\n\r\n                Sio.readMessage(\"t_pty_o_ssh\", (data) => {\r\n                    if (terminal !== null) {\r\n                        if (data.cmd.indexOf(\" closed by \") !== -1 || data.cmd.indexOf(\"logout\") !== -1 || this.selectEdit.selectedIndex === 0) {\r\n                            this._removeXterm(terminal);\r\n\r\n                            return;\r\n                        }\r\n\r\n                        if (this.xterm !== undefined && data.tag !== undefined && data.cmd !== undefined)\r\n                            this.xterm.write(data.cmd);\r\n                    }\r\n                });\r\n            },\r\n            _removeXterm(terminal) {\r\n                Sio.stopRead(\"t_pty_o_ssh\");\r\n\r\n                Sio.sendMessage(\"t_pty_close\", {tag: \"ssh\"});\r\n\r\n                this.xterm = null;\r\n                this.fitAddon = null;\r\n\r\n                terminal.remove();\r\n            },\r\n            init(windowComponent) {\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    this.elementPart1Container = windowComponent.querySelector(\".part_1_container\");\r\n                    this.elementPart2Container = windowComponent.querySelector(\".part_2_container\");\r\n                    this.selectEdit = windowComponent.querySelector(\".part_1_container select[name='edit']\");\r\n                    this.inputName = windowComponent.querySelector(\".part_1_container input[name='name']\");\r\n                    this.inputServer = windowComponent.querySelector(\".part_1_container input[name='server']\");\r\n                    this.inputUsername = windowComponent.querySelector(\".part_1_container input[name='username']\");\r\n                    this.inputPassword = windowComponent.querySelector(\".part_1_container input[name='password']\");\r\n                    this.inputKeyPublic = windowComponent.querySelector(\".part_1_container input[name='key_public']\");\r\n                    this.textareaDescription = windowComponent.querySelector(\"textarea[name='description']\");\r\n                    this.buttonDelete = windowComponent.querySelector(\".button_cmd_window.delete\");\r\n                    this.buttonSave = windowComponent.querySelector(\".button_cmd_window.save\");\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"sshInit\",\r\n                            cmd: `ls \"${this._setting().systemData.pathSetting}\"/*${this._setting().systemData.extensionSsh} | sed 's#.*/##'`\r\n                        });\r\n\r\n                        Sio.readMessage(\"t_exec_o_sshInit\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined) {\r\n                                const outSplit = result.split(\"\\n\");\r\n\r\n                                for (const value of outSplit) {\r\n                                    if (value !== \"\" && value.indexOf(\"ls: \") === -1) {\r\n                                        const option = document.createElement(\"option\");\r\n                                        option.value = value;\r\n                                        option.text = value.replace(this._setting().systemData.extensionSsh, \"\");\r\n                                        this.selectEdit.appendChild(option);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (data.close !== undefined)\r\n                                Sio.stopRead(\"t_exec_o_sshInit\");\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            clickLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"ssh_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    if (this.xterm !== null)\r\n                        this.xterm.focus();\r\n\r\n                    const menuElement = this._findParent(event.target, [\"menu_ssh\"]);\r\n\r\n                    if (menuElement !== null) {\r\n                        const buttonList = menuElement.querySelectorAll(\".button\");\r\n\r\n                        const index = Array.from(buttonList).indexOf(event.target);\r\n\r\n                        if (index >= 0) {\r\n                            for (const value of buttonList) {\r\n                                value.classList.remove(\"focused\");\r\n                            }\r\n\r\n                            buttonList[index].classList.add(\"focused\");\r\n\r\n                            if (index === 0) {\r\n                                this.elementPart1Container.style.display = \"block\";\r\n                                this.elementPart2Container.style.display = \"none\";\r\n                            } else if (index === 1) {\r\n                                this.elementPart1Container.style.display = \"none\";\r\n                                this.elementPart2Container.style.display = \"block\";\r\n\r\n                                const terminal = windowComponent.querySelector(\".terminal.xterm\");\r\n\r\n                                if (terminal === null && this.selectEdit.selectedIndex > 0)\r\n                                    this._createXterm(windowComponent);\r\n                                else {\r\n                                    if (this.selectEditIndexOld != this.selectEdit.selectedIndex) {\r\n                                        this._removeXterm(terminal);\r\n\r\n                                        this._createXterm(windowComponent);\r\n                                    }\r\n                                }\r\n\r\n                                this.selectEditIndexOld = this.selectEdit.selectedIndex;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.selectEdit.style.borderColor = \"transparent\";\r\n                    this.inputName.style.borderColor = \"transparent\";\r\n                    this.inputServer.style.borderColor = \"transparent\";\r\n                    this.inputUsername.style.borderColor = \"transparent\";\r\n\r\n                    if (event.target.classList.contains(\"save\") === true) {\r\n                        const inputNameCheck = /^[A-Za-z0-9-_ ]+$/.test(this.inputName.value);\r\n\r\n                        if (inputNameCheck === true && this.inputName.value !== \"\" && this.inputServer.value !== \"\" && this.inputUsername.value !== \"\") {\r\n                            this.inputNameReplace = this._replaceName(this.inputName.value, /\\s/g, true);\r\n\r\n                            Sio.sendMessage(\"t_crypt_encrypt_i\", {\r\n                                tag: \"sshSetting\",\r\n                                text: this.inputPassword !== null ? this.inputPassword.value : \"\"\r\n                            });\r\n\r\n                            Sio.readMessage(\"t_crypt_encrypt_o_sshSetting\", (data) => {\r\n                                Sio.stopRead(\"t_crypt_encrypt_o_sshSetting\");\r\n\r\n                                const content = {\r\n                                    name: this.inputName.value,\r\n                                    server: this.inputServer.value,\r\n                                    username: this.inputUsername.value,\r\n                                    password: data.out,\r\n                                    key_public: this.inputKeyPublic.value,\r\n                                    description: this.textareaDescription.value\r\n                                };\r\n\r\n                                // Create setting file\r\n                                Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                    tag: \"sshClickLogicSave\",\r\n                                    cmd: \"write\",\r\n                                    path: `${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionSsh}`,\r\n                                    content: JSON.stringify(content)\r\n                                });\r\n\r\n                                Sio.readMessage(\"t_exec_stream_o_sshClickLogicSave\", (data) => {\r\n                                    if (data.chunk === \"end\") {\r\n                                        Sio.stopRead(\"t_exec_stream_o_sshClickLogicSave\");\r\n\r\n                                        const optionValue = `${this.inputNameReplace}${this._setting().systemData.extensionSsh}`;\r\n\r\n                                        if (this.selectEdit.querySelector(`option[value='${optionValue}'`) === null) {\r\n                                            const option = document.createElement(\"option\");\r\n                                            option.value = optionValue;\r\n                                            option.text = this.inputNameReplace;\r\n                                            this.selectEdit.appendChild(option);\r\n\r\n                                            this.selectEdit.querySelector(`option[value='${optionValue}'`).selected = true;\r\n\r\n                                            this.buttonDelete.style.display = \"inline-block\";\r\n                                        }\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else {\r\n                            if (this.inputName.value === \"\" || inputNameCheck === false)\r\n                                this.inputName.style.borderColor = \"#ff0000\";\r\n                            if (this.inputServer.value === \"\")\r\n                                this.inputServer.style.borderColor = \"#ff0000\";\r\n                            if (this.inputUsername.value === \"\")\r\n                                this.inputUsername.style.borderColor = \"#ff0000\";\r\n                        }\r\n                    } else if (event.target.classList.contains(\"delete\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            this.$root.$refs.promptComponent.show(windowComponent, \"You really want to delete this ssh?\", () => {\r\n                                Sio.sendMessage(\"t_exec_i\", {\r\n                                    tag: \"sshClickLogicDelete\",\r\n                                    cmd: `rm \"${this._setting().systemData.pathSetting}/${this.inputNameReplace}${this._setting().systemData.extensionSsh}\"`\r\n                                });\r\n\r\n                                Sio.readMessage(\"t_exec_o_sshClickLogicDelete\", (data) => {\r\n                                    if (data.close !== undefined && this.selectEdit.selectedIndex > 0 && this.selectEdit.options[this.selectEdit.selectedIndex].value !== null) {\r\n                                        Sio.stopRead(\"t_exec_o_sshClickLogicDelete\");\r\n\r\n                                        this.selectEdit.options[this.selectEdit.selectedIndex].remove();\r\n                                        this.selectEdit.selectedIndex = 0;\r\n\r\n                                        this.inputName.value = \"\";\r\n                                        this.inputNameReplace = \"\";\r\n                                        this.inputServer.value = \"\";\r\n                                        this.inputUsername.value = \"\";\r\n                                        this.inputPassword.value = \"\";\r\n                                        this.inputKeyPublic.value = \"\";\r\n                                        this.textareaDescription.value = \"\";\r\n\r\n                                        this.buttonDelete.style.display = \"none\";\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            changeLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"ssh_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    if (event.target.classList.contains(\"edit\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            const optionValue = this.selectEdit.options[this.selectEdit.selectedIndex].value;\r\n\r\n                            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                tag: \"sshChangeLogicEdit\",\r\n                                cmd: \"read\",\r\n                                path: `${this._setting().systemData.pathSetting}/${optionValue}`\r\n                            });\r\n\r\n                            let buffer = \"\";\r\n\r\n                            Sio.readMessage(\"t_exec_stream_o_sshChangeLogicEdit\", (data) => {\r\n                                if (data.chunk !== \"end\")\r\n                                    buffer += data.chunk;\r\n                                else {\r\n                                    Sio.stopRead(\"t_exec_stream_o_sshChangeLogicEdit\");\r\n\r\n                                    const result = JSON.parse(buffer);\r\n\r\n                                    this.inputName.value = result.name;\r\n                                    this.inputNameReplace = this._replaceName(result.name, /\\s/g, true);\r\n                                    this.inputServer.value = result.server;\r\n                                    this.inputUsername.value = result.username;\r\n                                    this.inputKeyPublic.value = result.key_public;\r\n                                    this.textareaDescription.value = result.description;\r\n\r\n                                    this.buttonDelete.style.display = \"inline-block\";\r\n\r\n                                    Sio.sendMessage(\"t_crypt_decrypt_i\", {\r\n                                        tag: \"sshSetting\",\r\n                                        hex: result.password\r\n                                    });\r\n\r\n                                    Sio.readMessage(\"t_crypt_decrypt_o_sshSetting\", (data) => {\r\n                                        Sio.stopRead(\"t_crypt_decrypt_o_sshSetting\");\r\n\r\n                                        this.inputPassword.value = data.out;\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.inputName.value = \"\";\r\n                            this.inputNameReplace = \"\";\r\n                            this.inputServer.value = \"\";\r\n                            this.inputUsername.value = \"\";\r\n                            this.inputPassword.value = \"\";\r\n                            this.inputKeyPublic.value = \"\";\r\n                            this.textareaDescription.value = \"\";\r\n\r\n                            this.buttonDelete.style.display = \"none\";\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            resizeLogic() {\r\n                const terminalComponentList = document.querySelectorAll(\".terminal_project_component\");\r\n\r\n                for (const value of terminalComponentList) {\r\n                    const windowComponent = this._findParent(value, [\"window_component\"]);\r\n                    const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                    if (currentWindowElement !== null) {\r\n                        const terminal = value.querySelector(\".terminal.xterm\");\r\n\r\n                        if (terminal !== null && this.fitAddon !== null) {\r\n                            const clientRect = value.getBoundingClientRect();\r\n                            terminal.style.height = `${clientRect.height}px`;\r\n\r\n                            this.fitAddon.fit();\r\n\r\n                            const size = this.fitAddon.proposeDimensions();\r\n\r\n                            Sio.sendMessage(\"t_pty_resize\", {\r\n                                tag: \"ssh\",\r\n                                size: [size.cols, size.rows]\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            close(windowComponent) {\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null && currentWindowElement.name === \"Ssh\") {\r\n                    Sio.stopRead(\"t_pty_o_ssh\");\r\n\r\n                    Sio.sendMessage(\"t_pty_close\", {tag: \"ssh\"});\r\n\r\n                    this.xterm = null;\r\n                    this.fitAddon = null;\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                elementPart1Container: null,\r\n                elementPart2Container: null,\r\n                selectEdit: null,\r\n                selectEditIndexOld: 0,\r\n                inputName: null,\r\n                inputNameReplace: \"\",\r\n                inputServer: null,\r\n                inputUsername: null,\r\n                inputPassword: null,\r\n                inputKeyPublic: null,\r\n                textareaDescription: null,\r\n                buttonDelete: null,\r\n                buttonSave: null,\r\n                xterm: null,\r\n                fitAddon: null\r\n            };\r\n        },\r\n        created() {\r\n            this.$root.$refs.projectSshComponent = this;\r\n        },\r\n        beforeDestroy() {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .ssh_component {\r\n        .menu_ssh {\r\n            height: 28px;\r\n            background-color: #2b2b2b;\r\n            border-bottom: 1px solid #a0a0a0;\r\n            cursor: pointer;\r\n\r\n            .button {\r\n                display: inline-block;\r\n                padding: 7px 8px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .focused {\r\n                background-color: #0060ad;\r\n            }\r\n\r\n            p {\r\n                &:hover {\r\n                    background-color: #808080;\r\n                }\r\n            }\r\n        }\r\n\r\n        .part_1_container {\r\n            position: absolute;\r\n            top: 28px;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            padding: 10px;\r\n            display: block;\r\n        }\r\n\r\n        .part_2_container {\r\n            position: absolute;\r\n            top: 29px;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            display: none;\r\n\r\n            .terminal_project_component {\r\n                position: absolute;\r\n                top: 0;\r\n                bottom: 0;\r\n                left: 0;\r\n                right: 0;\r\n            }\r\n        }\r\n\r\n        .section {\r\n            margin-bottom: 20px;\r\n\r\n            input {\r\n                width: 40%;\r\n            }\r\n\r\n            textarea {\r\n                width: 40%;\r\n                resize: none;\r\n            }\r\n\r\n            .button_cmd_window {\r\n                &.delete {\r\n                    display: none;\r\n                    margin-left: 10px;\r\n                    background-color: #ff0000;\r\n                }\r\n            }\r\n        }\r\n\r\n        .bottom {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            width: 100%;\r\n            text-align: right;\r\n\r\n            .button_cmd_window {\r\n                display: inline-block;\r\n                margin-right: 25px;\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}