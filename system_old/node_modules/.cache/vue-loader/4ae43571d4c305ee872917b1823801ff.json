{"remainingRequest":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user_1/root/system/src/components/ToolTerser.vue?vue&type=style&index=0&id=46fb0c4f&lang=scss&scoped=true&","dependencies":[{"path":"/home/user_1/root/system/src/components/ToolTerser.vue","mtime":1612799792469},{"path":"/home/user_1/root/system/node_modules/css-loader/dist/cjs.js","mtime":1612517736416},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1612802232969},{"path":"/home/user_1/root/system/node_modules/postcss-loader/src/index.js","mtime":1612517736814},{"path":"/home/user_1/root/system/node_modules/sass-loader/dist/cjs.js","mtime":1612517748789},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js","mtime":1612802232969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50ZXJzZXJfY29tcG9uZW50IHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgdG9wOiAwOw0KICAgIGJvdHRvbTogMDsNCiAgICBsZWZ0OiAwOw0KICAgIHJpZ2h0OiAwOw0KICAgIHBhZGRpbmc6IDEwcHg7DQoNCiAgICAubGVmdCwgLnJpZ2h0IHsNCiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsNCiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICB3aWR0aDogNTAlOw0KICAgIH0NCg0KICAgIC5sZWZ0IHsNCiAgICAgICAgLnNlY3Rpb24gew0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCg0KICAgICAgICAgICAgaW5wdXQgew0KICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAucmlnaHQgew0KICAgICAgICAuc2VjdGlvbiB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQoNCiAgICAgICAgICAgIC5idXR0b25fY21kX3dpbmRvdyB7DQogICAgICAgICAgICAgICAgJi50ZXJzZXJfY29tbWFuZCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgLnNlY3Rpb24gew0KICAgICAgICAub3V0cHV0IHsNCiAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICBoZWlnaHQ6IDI1MHB4Ow0KICAgICAgICB9DQogICAgfQ0KDQogICAgLmJvdHRvbSB7DQogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgYm90dG9tOiAxMHB4Ow0KICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7DQoNCiAgICAgICAgLmJ1dHRvbl9jbWRfd2luZG93IHsNCiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjVweDsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["ToolTerser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiRA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ToolTerser.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"terser_component\">\r\n        <div class=\"left\">\r\n            <div class=\"section\">\r\n                <p>List:</p>\r\n                <select class=\"edit\" name=\"edit\">\r\n                    <option value=\"0\">Edit exist terser</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Folder input:</p>\r\n                <input type=\"text\" name=\"folder_input\" value=\"\"/>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Folder output:</p>\r\n                <input type=\"text\" name=\"folder_output\" value=\"\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"right\">\r\n            <div class=\"section\">\r\n                <div class=\"button_cmd_window terser_command execute\">Execute</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"section\">\r\n            <p>Output:</p>\r\n            <pre class=\"output\"></pre>\r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div class=\"button_cmd_window save\">Save</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Config from \"@/assets/js/Config.js\";\r\nimport Helper from \"@/assets/js/Helper\";\r\nimport Sio from \"@/assets/js/Sio\";\r\n\r\nexport default {\r\n    name: \"ToolTerserComponent\",\r\n    //components: {},\r\n    computed: {},\r\n    methods: {\r\n        _setting: Config.setting,\r\n        _findParent: Helper.findParent,\r\n        _capitalizeFirstLetter: Helper.capitalizeFirstLetter,\r\n        _currentWindowElement: Helper.currentWindowElement,\r\n        init(windowComponent) {\r\n            const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n            if (currentWindowElement !== null) {\r\n                this.selectEdit = windowComponent.querySelector(\"select[name='edit']\");\r\n                this.inputFolderInput = windowComponent.querySelector(\"input[name='folder_input']\");\r\n                this.inputFolderOutput = windowComponent.querySelector(\"input[name='folder_output']\");\r\n                this.buttonSave = windowComponent.querySelector(\".button_cmd_window.save\");\r\n                this.elementOutput = windowComponent.querySelector(\".output\");\r\n\r\n                if (this.selectEdit !== null) {\r\n                    Sio.sendMessage(\"t_exec_i\", {\r\n                        tag: \"terserInit\",\r\n                        cmd: `ls \"${this._setting().systemData.pathSetting}\"/*${this._setting().systemData.extensionTerser} | sed 's#.*/##'`\r\n                    });\r\n\r\n                    Sio.readMessage(\"t_exec_o_terserInit\", (data) => {\r\n                        const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                        if (result !== undefined) {\r\n                            const outSplit = result.split(\"\\n\");\r\n\r\n                            for (const value of outSplit) {\r\n                                if (value !== \"\" && value.indexOf(\"ls: \") === -1) {\r\n                                    const option = document.createElement(\"option\");\r\n                                    option.value = value;\r\n                                    option.text = value.replace(this._setting().systemData.extensionTerser, \"\");\r\n                                    this.selectEdit.appendChild(option);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (data.close !== undefined)\r\n                            Sio.stopRead(\"t_exec_o_terserInit\");\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        clickLogic(event) {\r\n            const windowComponent = this._findParent(event.target, [\"terser_component\"], [\"window_component\"]);\r\n            const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n            if (currentWindowElement !== null) {\r\n                this.selectEdit.style.borderColor = \"transparent\";\r\n                this.inputFolderInput.style.borderColor = \"transparent\";\r\n                this.inputFolderOutput.style.borderColor = \"transparent\";\r\n\r\n                if (event.target.classList.contains(\"save\") === true) {\r\n                    if (this.projectName !== \"\" && this.inputFolderInput.value !== \"\" && this.inputFolderOutput !== \"\")\r\n                        this.createFile();\r\n                    else {\r\n                        if (this.inputFolderInput.value === \"\")\r\n                            this.inputFolderInput.style.borderColor = \"#ff0000\";\r\n                        if (this.inputFolderOutput.value === \"\")\r\n                            this.inputFolderOutput.style.borderColor = \"#ff0000\";\r\n                    }\r\n                }\r\n\r\n                if (event.target.classList.contains(\"button_cmd_window\") === true) {\r\n                    if (this.projectName === \"\") {\r\n                        this.selectEdit.style.borderColor = \"#ff0000\";\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    this.elementOutput.innerHTML = \"\";\r\n\r\n                    const input = `${this.projectPath}${this.inputFolderInput.value}`;\r\n                    const output = `${this.projectPath}${this.inputFolderOutput.value}`;\r\n\r\n                    let command = \"\";\r\n\r\n                    if (event.target.classList.contains(\"execute\") === true) {\r\n                        command = `find \"${input}\" -name '*.min.js' -delete`;\r\n                        command += \"&& echo \\\"$(find \\\"\" + input + \"\\\" -name '*.js')\\\" | while read fileName; do terser \\\"$fileName\\\" --compress --mangle --output \\\"\" + output + \"/$(basename ${fileName%%.*}).min.js\\\"; done\";\r\n                        command += `&& ls \"${output}\"/*.min.js | sed 's#.*/##'`;\r\n                    }\r\n\r\n                    if (command === \"\")\r\n                        return false;\r\n\r\n                    Sio.sendMessage(\"t_exec_i\", {\r\n                        tag: \"terserCommand\",\r\n                        cmd: command,\r\n                    });\r\n\r\n                    let buffer = \"\";\r\n\r\n                    Sio.readMessage(\"t_exec_o_terserCommand\", (data) => {\r\n                        const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                        if (result !== undefined && event.target.classList.contains(\"execute\") === true) {\r\n                            buffer = result;\r\n                            this.elementOutput.innerHTML = buffer;\r\n                        }\r\n\r\n                        if (data.close !== undefined) {\r\n                            Sio.stopRead(\"t_exec_o_terserCommand\");\r\n\r\n                            this.elementOutput.innerHTML = buffer;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        changeLogic(event) {\r\n            const windowComponent = this._findParent(event.target, [\"terser_component\"], [\"window_component\"]);\r\n            const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n            if (currentWindowElement !== null) {\r\n                if (event.target.classList.contains(\"edit\") === true) {\r\n                    if (this.selectEdit.selectedIndex > 0) {\r\n                        const optionValue = this.selectEdit.options[this.selectEdit.selectedIndex].value;\r\n\r\n                        Sio.sendMessage(\"t_exec_stream_i\", {\r\n                            tag: \"terserChangeLogicEdit\",\r\n                            cmd: \"read\",\r\n                            path: `${this._setting().systemData.pathSetting}/${optionValue}`\r\n                        });\r\n\r\n                        let buffer = \"\";\r\n\r\n                        Sio.readMessage(\"t_exec_stream_o_terserChangeLogicEdit\", (data) => {\r\n                            if (data.chunk !== \"end\")\r\n                                buffer += data.chunk;\r\n                            else {\r\n                                Sio.stopRead(\"t_exec_stream_o_terserChangeLogicEdit\");\r\n\r\n                                const result = JSON.parse(buffer);\r\n\r\n                                this.projectName = result.name;\r\n                                this.projectPath = result.path;\r\n                                this.inputFolderInput.value = result.input;\r\n                                this.inputFolderOutput.value = result.output;\r\n                                this.elementOutput.innerHTML = \"\";\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.projectName = \"\";\r\n                        this.projectPath = \"\";\r\n                        this.inputFolderInput.value = \"\";\r\n                        this.inputFolderOutput.value = \"\";\r\n                        this.elementOutput.innerHTML = \"\";\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        createFile(name, path) {\r\n            if (name !== undefined)\r\n                this.projectName = name;\r\n\r\n            if (path !== undefined)\r\n                this.projectPath = path;\r\n\r\n            const content = {\r\n                input: this.inputFolderInput !== null ? this.inputFolderInput.value : \"\",\r\n                output: this.inputFolderOutput !== null ? this.inputFolderOutput.value : \"\",\r\n                name: this.projectName,\r\n                path: this.projectPath\r\n            };\r\n\r\n            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                tag: \"terserClickLogicSave\",\r\n                cmd: \"write\",\r\n                path: `${this._setting().systemData.pathSetting}/${this.projectName}${this._setting().systemData.extensionTerser}`,\r\n                content: JSON.stringify(content)\r\n            });\r\n\r\n            if (this.selectEdit !== null) {\r\n                Sio.readMessage(\"t_exec_stream_o_terserClickLogicSave\", (data) => {\r\n                    if (data.chunk === \"end\") {\r\n                        Sio.stopRead(\"t_exec_stream_o_terserClickLogicSave\");\r\n\r\n                        const optionValue = `${this.projectName}${this._setting().systemData.extensionTerser}`;\r\n\r\n                        if (this.selectEdit.querySelector(`option[value='${optionValue}'`) === null) {\r\n                            const option = document.createElement(\"option\");\r\n                            option.value = optionValue;\r\n                            option.text = this.projectName;\r\n                            this.selectEdit.appendChild(option);\r\n\r\n                            this.selectEdit.querySelector(`option[value='${optionValue}'`).selected = true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        deleteOption() {\r\n            if (this.selectEdit !== null) {\r\n                for (const option of this.selectEdit.options) {\r\n                    if (option.value === `${this.projectName}${this._setting().systemData.extensionTerser}`) {\r\n                        option.remove();\r\n                        this.selectEdit.selectedIndex = 0;\r\n\r\n                        this.projectName = \"\";\r\n                        this.projectPath = \"\";\r\n                        this.inputFolderInput.value = \"\";\r\n                        this.inputFolderOutput.value = \"\";\r\n                        this.elementOutput.innerHTML = \"\";\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            projectName: \"\",\r\n            projectPath: \"\",\r\n            selectEdit: null,\r\n            inputFolderInput: null,\r\n            inputFolderOutput: null,\r\n            elementOutput: null,\r\n            buttonSave: null\r\n        };\r\n    },\r\n    created() {\r\n        this.$root.$refs.toolTerserComponent = this;\r\n    },\r\n    beforeDestroy() {}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.terser_component {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    padding: 10px;\r\n\r\n    .left, .right {\r\n        vertical-align: top;\r\n        display: inline-block;\r\n        width: 50%;\r\n    }\r\n\r\n    .left {\r\n        .section {\r\n            margin-bottom: 20px;\r\n\r\n            input {\r\n                width: 70%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .right {\r\n        .section {\r\n            text-align: center;\r\n\r\n            .button_cmd_window {\r\n                &.terser_command {\r\n                    display: inline-block;\r\n                    margin: 5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .section {\r\n        .output {\r\n            overflow-y: auto;\r\n            height: 250px;\r\n        }\r\n    }\r\n\r\n    .bottom {\r\n        position: absolute;\r\n        bottom: 10px;\r\n        width: 100%;\r\n        text-align: right;\r\n\r\n        .button_cmd_window {\r\n            display: inline-block;\r\n            margin-right: 25px;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}