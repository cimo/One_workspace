{"remainingRequest":"/home/user_1/root/system/node_modules/thread-loader/dist/cjs.js!/home/user_1/root/system/node_modules/babel-loader/lib/index.js!/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user_1/root/system/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user_1/root/system/src/components/ToolGit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user_1/root/system/src/components/ToolGit.vue","mtime":1612864743646},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/thread-loader/dist/cjs.js","mtime":1612517717581},{"path":"/home/user_1/root/system/node_modules/babel-loader/lib/index.js","mtime":1612517717486},{"path":"/home/user_1/root/system/node_modules/cache-loader/dist/cjs.js","mtime":1612517717532},{"path":"/home/user_1/root/system/node_modules/vue-loader/lib/index.js","mtime":1612802232969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ToolGit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"git_component\">\r\n        <div class=\"menu_git\">\r\n            <p class=\"button focused\">Receive</p>\r\n            <p class=\"button\">Send</p>\r\n        </div>\r\n        <div class=\"part_1_container\">\r\n            <div class=\"left\">\r\n                <div class=\"section\">\r\n                    <p>List:</p>\r\n                    <select class=\"edit\" name=\"edit\">\r\n                        <option value=\"0\">Edit git data</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Url:</p>\r\n                    <input type=\"text\" name=\"url\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Username:</p>\r\n                    <input type=\"text\" name=\"username\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Password:</p>\r\n                    <input type=\"password\" name=\"password\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Branch name:</p>\r\n                    <input type=\"text\" name=\"branchName\" value=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <div class=\"section\">\r\n                    <div class=\"button_cmd_window git_command clone\">Clone</div>\r\n                    <div class=\"button_cmd_window git_command pull\">Pull</div>\r\n                    <div class=\"button_cmd_window git_command fetch\">Fetch</div>\r\n                    <div class=\"button_cmd_window git_command reset\">Reset</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Output:</p>\r\n                <pre class=\"output\"></pre>\r\n            </div>\r\n            <div class=\"bottom\">\r\n                <div class=\"button_cmd_window save\">Save</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"part_2_container\">\r\n            <div class=\"left\">\r\n                <div class=\"section\">\r\n                    <p>Project: <span class=\"project_label\"></span></p>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Branch name:</p>\r\n                    <input type=\"text\" name=\"branchName\" value=\"\"/>\r\n                </div>\r\n                <div class=\"section\">\r\n                    <p>Commit description:</p>\r\n                    <input type=\"text\" name=\"commitDescription\" value=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <div class=\"section\">\r\n                    <div class=\"button_cmd_window git_command status\">Status</div>\r\n                    <div class=\"button_cmd_window git_command commit\">Commit</div>\r\n                    <div class=\"button_cmd_window git_command push\">Push</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"section\">\r\n                <p>Output:</p>\r\n                <pre class=\"output\"></pre>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Config from \"@/assets/js/Config.js\";\r\n    import Helper from \"@/assets/js/Helper\";\r\n    import Sio from \"@/assets/js/Sio\";\r\n\r\n    export default {\r\n        name: \"ToolGitComponent\",\r\n        //components: {},\r\n        computed: {},\r\n        methods: {\r\n            _setting: Config.setting,\r\n            _findParent: Helper.findParent,\r\n            _capitalizeFirstLetter: Helper.capitalizeFirstLetter,\r\n            _currentWindowElement: Helper.currentWindowElement,\r\n            init(windowComponent) {\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    this.elementPart1Container = windowComponent.querySelector(\".part_1_container\");\r\n                    this.elementPart2Container = windowComponent.querySelector(\".part_2_container\");\r\n                    this.selectEdit = windowComponent.querySelector(\".part_1_container select[name='edit']\");\r\n                    this.elementProjectLabel = windowComponent.querySelector(\".part_2_container .project_label\");\r\n                    this.inputUrl = windowComponent.querySelector(\".part_1_container input[name='url']\");\r\n                    this.inputUsername = windowComponent.querySelector(\".part_1_container input[name='username']\");\r\n                    this.inputPassword = windowComponent.querySelector(\".part_1_container input[name='password']\");\r\n                    this.inputBranchName1 = windowComponent.querySelector(\".part_1_container input[name='branchName']\");\r\n                    this.inputBranchName2 = windowComponent.querySelector(\".part_2_container input[name='branchName']\");\r\n                    this.inputCommitDescription = windowComponent.querySelector(\".part_2_container input[name='commitDescription']\");\r\n                    this.elementOutput1 = windowComponent.querySelector(\".part_1_container .output\");\r\n                    this.elementOutput2 = windowComponent.querySelector(\".part_2_container .output\");\r\n                    this.buttonSave = windowComponent.querySelector(\".button_cmd_window.save\");\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"gitInit\",\r\n                            cmd: `ls \"${this._setting().systemData.pathSetting}\"/*${this._setting().systemData.extensionGit} | sed 's#.*/##'`\r\n                        });\r\n\r\n                        Sio.readMessage(\"t_exec_o_gitInit\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined) {\r\n                                const outSplit = result.split(\"\\n\");\r\n\r\n                                for (const value of outSplit) {\r\n                                    if (value !== \"\" && value.indexOf(\"ls: \") === -1) {\r\n                                        const option = document.createElement(\"option\");\r\n                                        option.value = value;\r\n                                        option.text = value.replace(this._setting().systemData.extensionGit, \"\");\r\n                                        this.selectEdit.appendChild(option);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (data.close !== undefined)\r\n                                Sio.stopRead(\"t_exec_o_gitInit\");\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            clickLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"git_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    const menuElement = this._findParent(event.target, [\"menu_git\"]);\r\n\r\n                    if (menuElement !== null) {\r\n                        const buttonList = menuElement.querySelectorAll(\".button\");\r\n\r\n                        const index = Array.from(buttonList).indexOf(event.target);\r\n\r\n                        if (index >= 0) {\r\n                            for (const value of buttonList) {\r\n                                value.classList.remove(\"focused\");\r\n                            }\r\n\r\n                            buttonList[index].classList.add(\"focused\");\r\n\r\n                            if (index === 0) {\r\n                                this.elementPart1Container.style.display = \"block\";\r\n                                this.elementPart2Container.style.display = \"none\";\r\n                            }\r\n                            else if (index === 1) {\r\n                                this.elementPart1Container.style.display = \"none\";\r\n                                this.elementPart2Container.style.display = \"block\";\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.selectEdit.style.borderColor = \"transparent\";\r\n                    this.inputUrl.style.borderColor = \"transparent\";\r\n                    this.inputUsername.style.borderColor = \"transparent\";\r\n                    this.inputPassword.style.borderColor = \"transparent\";\r\n                    this.inputBranchName1.style.borderColor = \"transparent\";\r\n                    this.inputBranchName2.style.borderColor = \"transparent\";\r\n                    this.inputCommitDescription.style.borderColor = \"transparent\";\r\n\r\n                    if (event.target.classList.contains(\"save\") === true) {\r\n                        if (this.projectName !== \"\" && this.inputUrl.value !== \"\" && this.inputUsername !== \"\" && this.inputPassword.value !== \"\")\r\n                            this.createFile();\r\n                        else {\r\n                            if (this.inputUrl.value === \"\")\r\n                                this.inputUrl.style.borderColor = \"#ff0000\";\r\n                            if (this.inputUsername.value === \"\")\r\n                                this.inputUsername.style.borderColor = \"#ff0000\";\r\n                            if (this.inputPassword.value === \"\")\r\n                                this.inputPassword.style.borderColor = \"#ff0000\";\r\n                        }\r\n                    }\r\n\r\n                    if (event.target.classList.contains(\"button_cmd_window\") === true) {\r\n                        if (this.projectName === \"\") {\r\n                            this.selectEdit.style.borderColor = \"#ff0000\";\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        this.elementOutput1.innerHTML = \"\";\r\n                        this.elementOutput2.innerHTML = \"\";\r\n\r\n                        let url = \"\";\r\n                        let command = \"\";\r\n\r\n                        if (this.inputUrl.value.indexOf(\"https://\") !== -1) {\r\n                            const inputUrlValue = this.inputUrl.value.replace(\"https://\", \"\");\r\n\r\n                            url = `https://${this.inputUsername.value}:${this.inputPassword.value}@${inputUrlValue}`;\r\n                        }\r\n                        else\r\n                            url = this.inputUrl.value;\r\n\r\n                        const branchNameMatch1 = /^[A-Za-z0-9-_/ ]+$/.test(this.inputBranchName1.value);\r\n                        const branchNameMatch2 = /^[A-Za-z0-9-_/ ]+$/.test(this.inputBranchName2.value);\r\n\r\n                        if (event.target.classList.contains(\"clone\") === true)\r\n                            command = `mkdir -p \"${this.projectPath}\" && cd \"${this.projectPath}\" && git clone ${url} .`;\r\n                        else if (event.target.classList.contains(\"pull\") === true) {\r\n                            if (branchNameMatch1 === true)\r\n                                command = `cd \"${this.projectPath}\" && git pull ${url} ${this.inputBranchName1.value}`;\r\n                            else\r\n                                this.inputBranchName1.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"fetch\") === true)\r\n                            command = `cd \"${this.projectPath}\" && git fetch --all`;\r\n                        else if (event.target.classList.contains(\"reset\") === true) {\r\n                            if (branchNameMatch1 === true)\r\n                                command = `cd \"${this.projectPath}\" && git reset --hard ${this.inputBranchName1.value}`;\r\n                            else\r\n                                this.inputBranchName1.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"status\") === true) {\r\n                            command = `cd \"${this.projectPath}\" && git status`;\r\n                        }\r\n                        else if (event.target.classList.contains(\"commit\") === true) {\r\n                            if (this.inputCommitDescription.value !== \"\") {\r\n                                this.inputBranchName2.value = \"\";\r\n\r\n                                command = `cd \"${this.projectPath}\" && git commit -m \"${this.inputCommitDescription.value}\"`;\r\n                            }\r\n                            else\r\n                                this.inputCommitDescription.style.borderColor = \"#ff0000\";\r\n                        }\r\n                        else if (event.target.classList.contains(\"push\") === true) {\r\n                            if (branchNameMatch2 === true) {\r\n                                this.inputCommitDescription.value = \"\";\r\n\r\n                                command = `cd \"${this.projectPath}\" && git remote set-url origin ${url} && git push ${this.inputBranchName2.value}`;\r\n                            }\r\n                            else\r\n                                this.inputBranchName2.style.borderColor = \"#ff0000\";\r\n                        }\r\n\r\n                        if (command === \"\")\r\n                            return false;\r\n\r\n                        Sio.sendMessage(\"t_exec_i\", {\r\n                            tag: \"gitCommand\",\r\n                            cmd: command\r\n                        });\r\n\r\n                        let buffer = \"\";\r\n\r\n                        Sio.readMessage(\"t_exec_o_gitCommand\", (data) => {\r\n                            const result = data.out !== undefined ? data.out : data.err;\r\n\r\n                            if (result !== undefined && event.target.classList.contains(\"clone\") === true) {\r\n                                buffer = result;\r\n                                this.elementOutput1.innerHTML = buffer;\r\n                            }\r\n                            else if (result !== undefined && event.target.classList.contains(\"fetch\") === true) {\r\n                                buffer = result;\r\n                                this.elementOutput1.innerHTML = buffer;\r\n                            }\r\n                            else if (result !== undefined && event.target.classList.contains(\"clone\") === false)\r\n                                buffer += result;\r\n\r\n                            if (data.close !== undefined) {\r\n                                Sio.stopRead(\"t_exec_o_gitCommand\");\r\n\r\n                                if (getComputedStyle(this.elementPart1Container, null).display === \"block\")\r\n                                    this.elementOutput1.innerHTML = buffer;\r\n                                else\r\n                                    this.elementOutput2.innerHTML = buffer;\r\n\r\n                                if (event.target.classList.contains(\"clone\") === true && data.close !== 128)\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                                else if (event.target.classList.contains(\"fetch\") === true && data.close === 0)\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            changeLogic(event) {\r\n                const windowComponent = this._findParent(event.target, [\"git_component\"], [\"window_component\"]);\r\n                const currentWindowElement = this._currentWindowElement(windowComponent);\r\n\r\n                if (currentWindowElement !== null) {\r\n                    if (event.target.classList.contains(\"edit\") === true) {\r\n                        if (this.selectEdit.selectedIndex > 0) {\r\n                            const optionValue = this.selectEdit.options[this.selectEdit.selectedIndex].value;\r\n\r\n                            Sio.sendMessage(\"t_exec_stream_i\", {\r\n                                tag: \"gitChangeLogicEdit\",\r\n                                cmd: \"read\",\r\n                                path: `${this._setting().systemData.pathSetting}/${optionValue}`\r\n                            });\r\n\r\n                            let buffer = \"\";\r\n\r\n                            Sio.readMessage(\"t_exec_stream_o_gitChangeLogicEdit\", (data) => {\r\n                                if (data.chunk !== \"end\")\r\n                                    buffer += data.chunk;\r\n                                else {\r\n                                    Sio.stopRead(\"t_exec_stream_o_gitChangeLogicEdit\");\r\n\r\n                                    const result = JSON.parse(buffer);\r\n\r\n                                    this.projectName = result.name;\r\n                                    this.projectPath = result.path;\r\n                                    this.elementProjectLabel.innerHTML = result.name;\r\n                                    this.inputUrl.value = result.url;\r\n                                    this.inputUsername.value = result.username;\r\n                                    this.inputBranchName1.value = \"\";\r\n                                    this.inputBranchName2.value = \"\";\r\n                                    this.inputCommitDescription.value = \"\";\r\n                                    this.elementOutput1.innerHTML = \"\";\r\n                                    this.elementOutput2.innerHTML = \"\";\r\n\r\n                                    Sio.sendMessage(\"t_crypt_decrypt_i\", {\r\n                                        tag: \"gitSetting\",\r\n                                        hex: result.password\r\n                                    });\r\n\r\n                                    Sio.readMessage(\"t_crypt_decrypt_o_gitSetting\", (data) => {\r\n                                        Sio.stopRead(\"t_crypt_decrypt_o_gitSetting\");\r\n\r\n                                        this.inputPassword.value = data.out;\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.projectName = \"\";\r\n                            this.projectPath = \"\";\r\n                            this.elementProjectLabel.innerHTML = \"\";\r\n                            this.inputUrl.value = \"\";\r\n                            this.inputUsername.value = \"\";\r\n                            this.inputPassword.value = \"\";\r\n                            this.inputBranchName1.value = \"\";\r\n                            this.inputBranchName2.value = \"\";\r\n                            this.inputCommitDescription.value = \"\";\r\n                            this.elementOutput1.innerHTML = \"\";\r\n                            this.elementOutput2.innerHTML = \"\";\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            createFile(name, path) {\r\n                if (name !== undefined)\r\n                    this.projectName = name;\r\n\r\n                if (path !== undefined)\r\n                    this.projectPath = path;\r\n\r\n                Sio.sendMessage(\"t_crypt_encrypt_i\", {\r\n                    tag: \"gitSetting\",\r\n                    text: this.inputPassword !== null ? this.inputPassword.value : \"\"\r\n                });\r\n\r\n                Sio.readMessage(\"t_crypt_encrypt_o_gitSetting\", (data) => {\r\n                    Sio.stopRead(\"t_crypt_encrypt_o_gitSetting\");\r\n\r\n                    const content = {\r\n                        url: this.inputUrl !== null ? this.inputUrl.value : \"\",\r\n                        username: this.inputUsername !== null ? this.inputUsername.value : \"\",\r\n                        password: data.out,\r\n                        name: this.projectName,\r\n                        path: this.projectPath\r\n                    };\r\n\r\n                    Sio.sendMessage(\"t_exec_stream_i\", {\r\n                        tag: \"gitClickLogicSave\",\r\n                        cmd: \"write\",\r\n                        path: `${this._setting().systemData.pathSetting}/${this.projectName}${this._setting().systemData.extensionGit}`,\r\n                        content: JSON.stringify(content)\r\n                    });\r\n\r\n                    if (this.selectEdit !== null) {\r\n                        Sio.readMessage(\"t_exec_stream_o_gitClickLogicSave\", (data) => {\r\n                            if (data.chunk === \"end\") {\r\n                                Sio.stopRead(\"t_exec_stream_o_gitClickLogicSave\");\r\n\r\n                                const optionValue = `${this.projectName}${this._setting().systemData.extensionGit}`;\r\n\r\n                                if (this.selectEdit.querySelector(`option[value='${optionValue}'`) === null) {\r\n                                    const option = document.createElement(\"option\");\r\n                                    option.value = optionValue;\r\n                                    option.text = this.projectName;\r\n                                    this.selectEdit.appendChild(option);\r\n\r\n                                    this.selectEdit.querySelector(`option[value='${optionValue}'`).selected = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            deleteOption() {\r\n                if (this.selectEdit !== null) {\r\n                    for (const option of this.selectEdit.options) {\r\n                        if (option.value === `${this.projectName}${this._setting().systemData.extensionGit}`) {\r\n                            option.remove();\r\n                            this.selectEdit.selectedIndex = 0;\r\n\r\n                            this.projectName = \"\";\r\n                            this.projectPath = \"\";\r\n                            this.elementProjectLabel.innerHTML = \"\";\r\n                            this.inputUrl.value = \"\";\r\n                            this.inputUsername.value = \"\";\r\n                            this.inputPassword.value = \"\";\r\n                            this.inputBranchName1.value = \"\";\r\n                            this.inputBranchName2.value = \"\";\r\n                            this.inputCommitDescription.value = \"\";\r\n                            this.elementOutput1.innerHTML = \"\";\r\n                            this.elementOutput2.innerHTML = \"\";\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                projectName: \"\",\r\n                projectPath: \"\",\r\n                elementPart1Container: null,\r\n                elementPart2Container: null,\r\n                selectEdit: null,\r\n                elementProjectLabel: null,\r\n                inputUrl: null,\r\n                inputUsername: null,\r\n                inputPassword: null,\r\n                inputBranchName1: null,\r\n                inputBranchName2: null,\r\n                inputCommitDescription: null,\r\n                elementOutput1: null,\r\n                elementOutput2: null,\r\n                buttonSave: null\r\n            };\r\n        },\r\n        created() {\r\n            this.$root.$refs.toolGitComponent = this;\r\n        },\r\n        beforeDestroy() {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .git_component {\r\n        .menu_git {\r\n            height: 28px;\r\n            background-color: #2b2b2b;\r\n            border-bottom: 1px solid #a0a0a0;\r\n            cursor: pointer;\r\n\r\n            .button {\r\n                display: inline-block;\r\n                padding: 7px 8px;\r\n                font-size: 12px;\r\n            }\r\n\r\n            .focused {\r\n                background-color: #0060ad;\r\n            }\r\n\r\n            p {\r\n                &:hover {\r\n                    background-color: #808080;\r\n                }\r\n            }\r\n        }\r\n\r\n        .part_1_container, .part_2_container {\r\n            position: absolute;\r\n            top: 28px;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            padding: 10px;\r\n        }\r\n\r\n        .part_1_container {\r\n            display: block;\r\n\r\n            .section {\r\n                .output {\r\n                    height: 100px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .part_2_container {\r\n            display: none;\r\n\r\n            .section {\r\n                .output {\r\n                    height: 280px;\r\n                }\r\n            }\r\n        }\r\n\r\n        .left, .right {\r\n            vertical-align: top;\r\n            display: inline-block;\r\n            width: 50%;\r\n        }\r\n\r\n        .left {\r\n            .section {\r\n                margin-bottom: 20px;\r\n\r\n                input {\r\n                    width: 90%;\r\n                }\r\n\r\n                input[name='branchName'] {\r\n                    width: 40%;\r\n                }\r\n            }\r\n        }\r\n\r\n        .right {\r\n            .section {\r\n                text-align: center;\r\n\r\n                .button_cmd_window {\r\n                    &.git_command {\r\n                        display: inline-block;\r\n                        margin: 5px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .section {\r\n            .output {\r\n                overflow-y: auto;\r\n            }\r\n        }\r\n\r\n        .bottom {\r\n            position: absolute;\r\n            bottom: 10px;\r\n            width: 100%;\r\n            text-align: right;\r\n\r\n            .button_cmd_window {\r\n                display: inline-block;\r\n                margin-right: 25px;\r\n            }\r\n        }\r\n    }\r\n</style>"],"sourceRoot":"src/components"}]}