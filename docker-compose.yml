version: '3.8'
services:
    nodejs_container:
        container_name: NodeJs_${NODEJS_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_nodejs
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                NODEJS_VERSION: ${NODEJS_VERSION}
                NODEJS_REGISTRY: ${NODEJS_REGISTRY}
                NODEJS_STRICT_SSL: ${NODEJS_STRICT_SSL}
                NODEJS_ENV: ${NODEJS_ENV}
                NODEJS_PORT_HTTP: ${NODEJS_PORT_HTTP}
                NODEJS_PORT_HTTPS: ${NODEJS_PORT_HTTPS}
                NODEJS_PORT_VUE: ${NODEJS_PORT_VUE}
                NODEJS_PORT_RANGE: ${NODEJS_PORT_RANGE}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${NODEJS_PORT_HTTP}:${NODEJS_PORT_HTTP}
            - 127.0.0.1:${NODEJS_PORT_HTTPS}:${NODEJS_PORT_HTTPS}
            - 127.0.0.1:${NODEJS_PORT_VUE}:${NODEJS_PORT_VUE}
            - 127.0.0.1:${NODEJS_PORT_RANGE}:${NODEJS_PORT_RANGE}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
        networks:
            default:
                ipv4_address: ${NODEJS_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    apache_container:
        container_name: Apache_${APACHE_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_apache
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                APACHE_VERSION: ${APACHE_VERSION}
                APACHE_PORT_HTTP: ${APACHE_PORT_HTTP}
                APACHE_PORT_HTTPS: ${APACHE_PORT_HTTPS}
                NODEJS_PORT_HTTP: ${NODEJS_PORT_HTTP}
                NODEJS_PORT_HTTPS: ${NODEJS_PORT_HTTPS}
                PHP_VH_NAME: ${PHP_VH_NAME}
                PHP_PORT_FPM: ${PHP_PORT_FPM}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${APACHE_PORT_HTTP}:80
            - 127.0.0.1:${APACHE_PORT_HTTPS}:443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
            - ${DOCKER_PATH_ROOT}virtual_host/:/usr/local/apache2/htdocs/virtual_host/
        networks:
            default:
                ipv4_address: ${APACHE_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    python_container:
        container_name: Python_${PYTHON_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_python
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                PYTHON_VERSION: ${PYTHON_VERSION}
                PYTHON_PORT: ${PYTHON_PORT}
                PYTHON_PIP_VERSION: ${PYTHON_PIP_VERSION}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${PYTHON_PORT}:${PYTHON_PORT}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
        networks:
            default:
                ipv4_address: ${PYTHON_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    php_container:
        container_name: Php_${PHP_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_php
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                PHP_VERSION: ${PHP_VERSION}
                PHP_VH_NAME: ${PHP_VH_NAME}
                PHP_PORT_FPM: ${PHP_PORT_FPM}
                PHP_XDEBUG_KEY: ${PHP_XDEBUG_KEY}
                PHP_XDEBUG_HOST: ${PHP_XDEBUG_HOST}
                PHP_XDEBUG_PORT: ${PHP_XDEBUG_PORT}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${PHP_PORT_FPM}:${PHP_PORT_FPM}
            - 127.0.0.1:${PHP_XDEBUG_PORT}:${PHP_XDEBUG_PORT}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
        networks:
            default:
                ipv4_address: ${PHP_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    mysql_container:
        container_name: MySql_${MYSQL_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_mysql
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                MYSQL_VERSION: ${MYSQL_VERSION}
                MYSQL_USER: ${MYSQL_USER}
                MYSQL_PASSWORD: ${MYSQL_PASSWORD}
                MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
                MYSQL_PORT: ${MYSQL_PORT}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${MYSQL_PORT}:3306
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
            - ${MYSQL_DATA_PATH}:/var/lib/mysql/
        networks:
            default:
                ipv4_address: ${MYSQL_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    postgresql_container:
        container_name: PostgreSql_${POSTGRES_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_postgresql
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                POSTGRES_VERSION: ${POSTGRES_VERSION}
                POSTGRES_USER: ${POSTGRES_USER}
                POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
                POSTGRES_PORT: ${POSTGRES_PORT}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${POSTGRES_PORT}:5432
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root
            - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data/
        networks:
            default:
                ipv4_address: ${POSTGRES_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    redis_container:
        container_name: Redis_${REDIS_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_redis
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                REDIS_VERSION: ${REDIS_VERSION}
                REDIS_PASSWORD: ${REDIS_PASSWORD}
                REDIS_PORT: ${REDIS_PORT}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${REDIS_PORT}:6379
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
            - ${REDIS_DATA_PATH}:/data/
        networks:
            default:
                ipv4_address: ${REDIS_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
    mongodb_container:
        container_name: MongoDb_${MONGODB_VERSION}
        build:
            context: ${DOCKER_PATH_ROOT}
            dockerfile: ${DOCKER_PATH_ROOT}docker/Dockerfile_mongodb
            args:
                PROXY_HTTP: ${PROXY_HTTP}
                PROXY_HTTPS: ${PROXY_HTTPS}
                PROXY_CERTIFICATE: ${PROXY_CERTIFICATE}
                DOCKER_PATH_ROOT: ${DOCKER_PATH_ROOT}
                TIMEZONE: ${TIMEZONE}
                CERTIFICATE_FILE: ${CERTIFICATE_FILE}
                CERTIFICATE_KEY: ${CERTIFICATE_KEY}
                CERTIFICATE_CHAIN: ${CERTIFICATE_CHAIN}
                WWW_USER_NAME: ${WWW_USER_NAME}
                WWW_USER_PASSWORD: ${WWW_USER_PASSWORD}
                WEB_FOLDER: ${WEB_FOLDER}
                WEB_USER_GROUP: ${WEB_USER_GROUP}
                MONGODB_VERSION: ${MONGODB_VERSION}
                MONGODB_DATABASE: ${MONGODB_DATABASE}
                MONGODB_USER: ${MONGODB_USER}
                MONGODB_PASSWORD: ${MONGODB_PASSWORD}
                MONGODB_PORT: ${MONGODB_PORT}
                MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
                MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
        env_file:
            - ${DOCKER_PATH_ROOT}env/.env
        ports:
            - 127.0.0.1:${MONGODB_PORT}:27017
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${DOCKER_PATH_ROOT}:/home/${WWW_USER_NAME}/root/
            - ${MONGODB_DATA_PATH}:/data/db/
        networks:
            default:
                ipv4_address: ${MONGODB_NETWORK_IP}
        logging:
            options:
                max-size: ${LOG_MAX_SIZE}
                max-file: ${LOG_MAX_FILE}
networks:
    default:
        driver: ${NETWORK_DRIVER}
        ipam:
            driver: default
            config:
                - subnet: ${NETWORK_SUB}
