ARG _NODEJS_VERSION

FROM node:${_NODEJS_VERSION}

ARG _ENV_NAME
ARG _DOMAIN
ARG _TIMEZONE
ARG _SERVER_PORT
ARG _SERVER_PORT_RANGE
ARG _NODE_EXTRA_CA_CERTS

ENV ENV_NAME=${_ENV_NAME}
ENV DOMAIN=${_DOMAIN}
ENV TZ=${_TIMEZONE}

ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NOWARNINGS=yes
ENV NODE_OPTIONS=--use-openssl-ca
ENV NODE_EXTRA_CA_CERTS=${_NODE_EXTRA_CA_CERTS}
ENV WINEDLLOVERRIDES="mscoree,mshtml="
ENV WINEDEBUG="fixme-all"
ENV WINEARCH=win64

COPY ./certificate/proxy/ /usr/local/share/ca-certificates/

RUN cd ~ \
    && chmod -R 0644 /usr/local/share/ca-certificates/ \
    && apt-get update && apt-get install -y ca-certificates gnupg curl \
    && update-ca-certificates \
    # No root
    && dpkg --add-architecture i386 \
    && mkdir -p /home/root/ /usr/local/lib/node_modules/ \
    && chown -R node:node /home/root/ /usr/local/lib/node_modules/ /usr/local/bin/ \
    && chmod 775 /home/root/ /usr/local/lib/node_modules/ /usr/local/bin/ \
    # WineHq
    && mkdir -p /etc/apt/keyrings/ \
    && curl -fsSL https://dl.winehq.org/wine-builds/winehq.key --output /etc/apt/keyrings/winehq-archive.key \
    && curl -fsSL https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources --output /etc/apt/sources.list.d/winehq-jammy.sources \
    # X11
    && echo "export DISPLAY=:0.0" >> /home/node/.bashrc \
    && echo "export LIBGL_ALWAYS_INDIRECT=true" >> /home/node/.bashrc \
    && echo "export DBUS_SYSTEM_BUS_ADDRESS='unix:path=/var/run/dbus/system_bus_socket'" >> /home/node/.bashrc \
    && echo "export DBUS_SESSION_BUS_ADDRESS='unix:path=/var/run/dbus/system_bus_socket'" >> /home/node/.bashrc \
    && mkdir -p /run/user/1000/ /run/dbus/ \
    && chown node:root /run/user/1000/ /run/dbus/ \
    # Apt
    && apt-get update && apt-get install -y --install-recommends \
    fonts-noto \
    fonts-noto-cjk \
    winehq-stable \
    libnss3-dev \
    libgdk-pixbuf2.0-dev \
    libgtk-3-dev \
    libxss-dev \
    libxtst-dev \
    libxkbcommon-x11-0 \
    # Tls
    && mkdir -p /var/log/one_workspace/ \
    && chown -R node:node /var/log/one_workspace/ \
    && chmod 775 /var/log/one_workspace/ \
    # Clean
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && apt-get autoremove -y

USER node

WORKDIR /home/root/

# Tls
CMD chmod +x /home/root/docker/tls.sh \
    && bash /home/root/docker/tls.sh \
    # X11
    && rm -f /run/dbus/pid \
    && dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address \
    # Keep running
    && tail -f /dev/null

EXPOSE ${_SERVER_PORT} ${_SERVER_PORT_RANGE}
