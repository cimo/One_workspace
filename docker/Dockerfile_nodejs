ARG NODEJS_VERSION

FROM node:${NODEJS_VERSION}

ARG ENV_NAME
ARG DOMAIN

ARG DEBUG
ARG DOCKER_PATH_ROOT
ARG TIMEZONE
ARG PROXY_HTTP
ARG PROXY_HTTPS
ARG PROXY_CERTIFICATE
ARG NODEJS_REGISTRY
ARG NODEJS_STRICT_SSL
ARG NODEJS_ENV
ARG NODEJS_PORT
ARG NODEJS_PORT_RANGE

ENV ENV_NAME=${ENV_NAME}
ENV DOMAIN=${DOMAIN}

ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NOWARNINGS=yes
ENV TZ=${TIMEZONE}
ENV http_proxy=${PROXY_HTTP}
ENV https_proxy=${PROXY_HTTPS}
ENV HTTP_PROXY=${PROXY_HTTP}
ENV HTTPS_PROXY=${PROXY_HTTPS}
ENV CURL_CA_BUNDLE=${PROXY_CERTIFICATE}
ENV NODE_REGISTRY=${NODEJS_REGISTRY}
ENV NODE_STRICT_SSL=${NODEJS_STRICT_SSL}
ENV NODE_ENV=${NODEJS_ENV}
ENV NODE_EXTRA_CA_CERTS=${PROXY_CERTIFICATE}

COPY ${DOCKER_PATH_ROOT}certificate/zscaler/* /usr/local/share/ca-certificates/
COPY ${DOCKER_PATH_ROOT}docker/.curlrc /root/.curlrc_TMP
COPY ${DOCKER_PATH_ROOT}docker/.npmrc /root/.npmrc_TMP

# Env variable conversion
RUN cd ~ \
    && apt-get update && apt-get install -y \
    gettext \
    && envsubst < /root/.curlrc_TMP > /root/.curlrc && cat /root/.curlrc && rm /root/.curlrc_TMP \
    && envsubst < /root/.npmrc_TMP > /root/.npmrc && cat /root/.npmrc && rm /root/.npmrc_TMP

# System
RUN cd ~ \
    # No root
    && mkdir -p /home/root/certificate/ /var/log/one_workspace/ \
    && chown -R node:node /home/root/ /var/log/one_workspace/ /usr/local/lib/node_modules/ \
    && chmod 775 /home/root/ /var/log/one_workspace/ /usr/local/lib/node_modules/ \
    # Apt
    && apt-get update && apt-get install -y \
    ca-certificates \
    # Certificate
    && update-ca-certificates \
    # Clean
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && apt-get autoremove -y

USER node

WORKDIR /home/root/

CMD chmod +x /home/root/docker/tls.sh \
    && bash /home/root/docker/tls.sh \
    && tail -f /dev/null

EXPOSE ${NODEJS_PORT} ${NODEJS_PORT_RANGE}
